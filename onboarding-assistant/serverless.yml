service: onboarding-assistant
frameworkVersion: '^3.0.0'

plugins:
  - serverless-domain-manager
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-plugin-warmup
  - serverless-wsgi

provider:
  iamRoleStatements:
    -
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Effect: Allow
      Resource:
        - { "Fn::GetAtt": ["ShortenerDynamoDbTable", "Arn" ] }
    -
      Action:
        - "secretsmanager:GetSecretValue"
      Effect: Allow
      Resource:
        - "${env:SECRET_ARN}"
    -
      Action:
        - "lambda:InvokeFunction"
      Effect: Allow
      Resource: "*"
  name: aws
  region: us-east-1
  runtime: python3.12
  stage: ${opt:stage, "production"}
  environment:
    SECRET_ARN: "${env:SECRET_ARN}"
    FUNCTION_PREFIX: "${self:service}-${self:provider.stage}-"
    SHORTENER_TABLE: ${self:custom.shortenerDynamoDbTableName}

functions:
  form:
    handler: code/handler.handle_form_submission
    memorySize: 128
    runtime: python3.12
    timeout: 25
  analytics:
    handler: analytics.event_worker
    memorySize: 128
    runtime: python3.12
    timeout: 25
  events:
    events:
      -
        http:
          method: any
          path: /events
    handler: wsgi_handler.handler
    memorySize: 128
    runtime: python3.12
    timeout: 25
  interactivity:
    events:
      -
        http:
          method: any
          path: /interactivity
    warmup:
      default:
        enabled: true
    handler: wsgi_handler.handler
    memorySize: 128
    runtime: python3.12
    timeout: 25
  shortener:
    events:
      -
        http:
          method: any
          path: /{any+}
    handler: wsgi_handler.handler
    memorySize: 128
    runtime: python3.12
    timeout: 25
  menu:
    events:
      -
        http:
          method: any
          path: /search
          integration: lambda
    warmup:
      default:
        enabled: true
    handler: code/menu/handler.menu
    memorySize: 128
    runtime: nodejs18.x

resources:
  Resources:
    ShortenerDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: code
            AttributeType: S
        KeySchema:
          -
            AttributeName: code
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.shortenerDynamoDbTableName}

custom:
  customDomain:
    domainName: 'links.helpful.directory'
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  pythonRequirements:
    dockerizePip: true
    dockerImage: python:3.12-bookworm # needed for gcc for deps like yarl
    usePoetry: false
    fileName: code/requirements.txt
    vendor: code/modules
  warmup:
    default:
      enabled: false
  wsgi:
    app: code/handler.application
    packRequirements: false
  shortenerDynamoDbTableName: 'shortener-table-${self:provider.stage}'
